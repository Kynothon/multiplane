FROM <%= options.variant %> as base

WORKDIR /tmp/workdir

RUN set -e ; \
<%= case options.variant 
    when /ubuntu/, /debian/ then 
        %q{
apt-get update -yqq ; \
apt-get install -yqq --no-install-recommends ca-certificates expat libgomp1 libfreetype6 libfribidi0 fontconfig ; \
apt-get autoremove -y ; \
apt-get clean -y
        }.strip
    when /alpine/ then
        %{
apk add --no-cache --update libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0 libgomp expat freetype fontconfig fribidi 
        }.strip
    when /centos/ then
        %q{
yum -y install libgomp libssh freetype fontconfig fribidi ; \
yum clean all
        }.strip
end %>

FROM base AS build

ARG PREFIX="/usr/local"
ARG PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig"
ARG LD_LIBRARY_PATH="$PREFIX/lib"
ARG MAKEFLAGS='-j2'

RUN set -e ;\
<%= case options.variant 
    when /ubuntu/, /debian/ then 
        %q{
apt-get update -yqq ;\
apt-get install -yqq --no-install-recommends \
autoconf \
automake \
bzip2 \
cmake \
curl \
dirmngr \
g++ \
gcc \
git \
gnupg2 \
gperf \
libexpat1-dev \
libfontconfig1-dev \
libfreetype6-dev \
libfribidi-dev \
libssl-dev \
libtool \
make \
nasm \
perl \
pkg-config \
python \
yasm \
zlib1g-dev
        }.strip
    when /alpine/ then
        %{
apk add --no-cache --update \
autoconf \
automake \
binutils \
bzip2 \
cmake \
curl \
coreutils \
diffutils \
expat-dev \
file \
fontconfig-dev \
freetype-dev \
fribidi-dev \
g++ \
gcc \
gnupg \
gperf \
libtool \
make \
nasm \
openssl-dev \
python \
tar \
yasm \
zlib-dev
		}.strip
    when /centos/ then
        %{
yum --enablerepo=extras install -y epel-release ; \
yum groupinstall "Development tools" -y ; \
yum install -y \
bzip2 \
cmake \
expat-devel \
freetype-devel \
fribidi-devel \
fontconfig-devel \
openssl-devel \
libssh-devel \
tar \
yasm \
which \
zlib-devel
        }.strip
end %>

<% if options.ogg %>
ARG OGG_SHA256SUM=<%= options.ogg_sha256sum %>
ARG OGG_VERSION=<%= options.ogg_version %>
RUN set -e; \
dir=/tmp/ogg ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["ogg"]["buildscript"].strip %> ; \
rm -rf ${dir} 
<% end %>

<% if options.opencoreamr %>
ARG OPENCOREAMR_SHA1SUM=<%= options.opencoreamr_sha1sum %>
ARG OPENCOREAMR_VERSION=<%= options.opencoreamr_version %> 
RUN set -e; \
dir=/tmp/opencore-amr ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["opencoreamr"]["buildscript"].strip %> ; \
rm -rf ${dir} 
<% end %>

<% if options.opus %>
ARG OPUS_SHA256SUM=<%= options.opus_sha256sum %>
ARG OPUS_VERSION=<%= options.opus_version %>
RUN set -e; \
dir=/tmp/opus ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["opus"]["buildscript"].strip %> ; \
rm -rf ${dir} 
<% end %>

<% if options.x264 %>
ARG X264_VERSION=<%= options.x264_version %>
RUN set -e ;\
dir=/tmp/x264 ;\
mkdir -p ${dir} ;\
cd ${dir} ;\
<%= deps["x264"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.x265 %>
ARG X265_MD5SUM=<%= options.x265_md5sum %>
ARG X265_VERSION=<%= options.x265_version %>
RUN set -e; \
dir=/tmp/x265 ; \
mkdir -p ${dir} ; \
<%= deps["x265"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.openjpeg %>
ARG OPENJPEG_VERSION=<%= options.openjpeg_version %>
RUN set -e; \
dir=/tmp/openjpeg ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["openjpeg"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.fdkaac %>
ARG FDKAAC_VERSION=<%= options.fdkaac_version %>
RUN set -e; \
dir=/tmp/fdkaac ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["fdkaac"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.lame %>	
ARG LAME_VERSION=<%= options.lame_version %>
RUN set -e; \
dir=/tmp/lame ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["lame"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.ass %>
ARG ASS_SHA256SUM=<%= options.ass_sha256sum %>
ARG ASS_VERSION=<%= options.ass_version %>
RUN set -e; \
dir=/tmp/ass ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["ass"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.theora %>    
ARG THEORA_SHA256SUM=<%= options.theora_sha256sum %>
ARG THEORA_VERSION=<%= options.theora_version %>
RUN set -e; \
dir=/tmp/theora ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["theora"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.vorbis %>    
ARG VORBIS_SHA256SUM=<%= options.vorbis_sha256sum %>
ARG VORBIS_VERSION=<%= options.vorbis_version %>
RUN set -e; \
dir=/tmp/vorbis ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["vorbis"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.vpx %>	
ARG VPX_VERSION=<%= options.vpx_version %>
RUN set -e; \
dir=/tmp/vpx ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["vpx"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.xvid %>    
ARG XVID_SHA256SUM=<%= options.xvid_sha256sum %>
ARG XVID_VERSION=<%= options.xvid_version %>
RUN set -e; \
dir=/tmp/xvid ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["xvid"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.vidstab %>
ARG VIDSTAB_SHA256SUM=<%= options.vidstab_sha256sum %>
ARG VIDSTAB_VERSION=<%= options.vidstab_version %>
RUN set -e; \
dir=/tmp/vidstab ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["vidstab"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.kvazaar %>
ARG KVAZAAR_VERSION=<%= options.kvazaar_version %>
RUN set -e; \
dir=/tmp/kvazaar ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["kvazaar"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.aom %>
ARG AOM_VERSION=<%= options.aom_version %>
RUN set -e; \
dir=/tmp/aom ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["aom"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>


FROM        base

ONBUILD ARG PKG_CONFIG_PATH='/usr/local/lib/pkgconfig'
ONBUILD ARG PREFIX='/usr/local'
ENV         LD_LIBRARY_PATH=/usr/local/lib

COPY --from=build /usr/local/ /usr/local/

